/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface WButton {
        /**
          * button html "disabled" attribute
         */
        "disabled": boolean;
        /**
          * renders button as underlined text
         */
        "outline": boolean;
        /**
          * button text size
         */
        "size": 'xs' | 'sm' | 'base' | 'lg' | 'xl';
        /**
          * renders button as underlined text
         */
        "text": boolean;
        /**
          * button html "type" attribute
         */
        "type": string;
    }
    interface WInputText {
        /**
          * input html tag "autocomplete" attribute, defaults to ""
         */
        "autocomplete": string;
        /**
          * input html tag "autofocus" attribute, defaults to "false"
         */
        "autofocus": boolean;
        /**
          * error message displayed in the form group, defaults to ""
         */
        "error": string;
        /**
          * input html tag "inputmode" attribute, defaults to ""
         */
        "inputmode": string;
        /**
          * label for the form group, defaults to ""
         */
        "label": string;
        /**
          * input html tag "required" attribute, defaults to "false"
         */
        "required": boolean;
        /**
          * input html tag "type" attribute, defaults to "text"
         */
        "type": string;
        /**
          * value, defaults to ""
         */
        "value": string;
    }
}
declare global {
    interface HTMLWButtonElement extends Components.WButton, HTMLStencilElement {
    }
    var HTMLWButtonElement: {
        prototype: HTMLWButtonElement;
        new (): HTMLWButtonElement;
    };
    interface HTMLWInputTextElement extends Components.WInputText, HTMLStencilElement {
    }
    var HTMLWInputTextElement: {
        prototype: HTMLWInputTextElement;
        new (): HTMLWInputTextElement;
    };
    interface HTMLElementTagNameMap {
        "w-button": HTMLWButtonElement;
        "w-input-text": HTMLWInputTextElement;
    }
}
declare namespace LocalJSX {
    interface WButton {
        /**
          * button html "disabled" attribute
         */
        "disabled"?: boolean;
        /**
          * renders button as underlined text
         */
        "outline"?: boolean;
        /**
          * button text size
         */
        "size"?: 'xs' | 'sm' | 'base' | 'lg' | 'xl';
        /**
          * renders button as underlined text
         */
        "text"?: boolean;
        /**
          * button html "type" attribute
         */
        "type"?: string;
    }
    interface WInputText {
        /**
          * input html tag "autocomplete" attribute, defaults to ""
         */
        "autocomplete"?: string;
        /**
          * input html tag "autofocus" attribute, defaults to "false"
         */
        "autofocus"?: boolean;
        /**
          * error message displayed in the form group, defaults to ""
         */
        "error"?: string;
        /**
          * input html tag "inputmode" attribute, defaults to ""
         */
        "inputmode"?: string;
        /**
          * label for the form group, defaults to ""
         */
        "label"?: string;
        "onChange"?: (event: CustomEvent<string>) => void;
        "onInput"?: (event: CustomEvent<string>) => void;
        /**
          * input html tag "required" attribute, defaults to "false"
         */
        "required"?: boolean;
        /**
          * input html tag "type" attribute, defaults to "text"
         */
        "type"?: string;
        /**
          * value, defaults to ""
         */
        "value"?: string;
    }
    interface IntrinsicElements {
        "w-button": WButton;
        "w-input-text": WInputText;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "w-button": LocalJSX.WButton & JSXBase.HTMLAttributes<HTMLWButtonElement>;
            "w-input-text": LocalJSX.WInputText & JSXBase.HTMLAttributes<HTMLWInputTextElement>;
        }
    }
}
